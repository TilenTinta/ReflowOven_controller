/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETUP_PIDVIEWBASE_HPP
#define SETUP_PIDVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/setup_pid_screen/Setup_PidPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>

class Setup_PidViewBase : public touchgfx::View<Setup_PidPresenter>
{
public:
    Setup_PidViewBase();
    virtual ~Setup_PidViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void PidToSettings_flag()
    {
        // Override and implement this function in Setup_Pid
    }
    virtual void PID_value_up()
    {
        // Override and implement this function in Setup_Pid
    }
    virtual void PID_value_dn()
    {
        // Override and implement this function in Setup_Pid
    }
    virtual void setPID_value()
    {
        // Override and implement this function in Setup_Pid
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::ButtonWithLabel btnSet;
    touchgfx::ButtonWithLabel btnBack;
    touchgfx::ButtonWithIcon btnPID_UP;
    touchgfx::ButtonWithIcon btnPID_DN;
    touchgfx::TextAreaWithOneWildcard txtPID_val;
    touchgfx::TextAreaWithOneWildcard txtPID_lbl;
    touchgfx::Line line1_1;
    touchgfx::PainterRGB565 line1_1Painter;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TXTPID_VAL_SIZE = 4;
    touchgfx::Unicode::UnicodeChar txtPID_valBuffer[TXTPID_VAL_SIZE];
    static const uint16_t TXTPID_LBL_SIZE = 10;
    touchgfx::Unicode::UnicodeChar txtPID_lblBuffer[TXTPID_LBL_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Setup_PidViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SETUP_PIDVIEWBASE_HPP
