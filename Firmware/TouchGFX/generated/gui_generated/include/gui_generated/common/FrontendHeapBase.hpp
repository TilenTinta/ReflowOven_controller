/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/startup_screen/StartUpView.hpp>
#include <gui/startup_screen/StartUpPresenter.hpp>
#include <gui/error_screen/ErrorView.hpp>
#include <gui/error_screen/ErrorPresenter.hpp>
#include <gui/home_reflow_screen/Home_ReflowView.hpp>
#include <gui/home_reflow_screen/Home_ReflowPresenter.hpp>
#include <gui/home_dry_screen/Home_DryView.hpp>
#include <gui/home_dry_screen/Home_DryPresenter.hpp>
#include <gui/menu_screen/MenuView.hpp>
#include <gui/menu_screen/MenuPresenter.hpp>
#include <gui/settings_screen/SettingsView.hpp>
#include <gui/settings_screen/SettingsPresenter.hpp>
#include <gui/setup_pid_screen/Setup_PidView.hpp>
#include <gui/setup_pid_screen/Setup_PidPresenter.hpp>
#include <gui/dry_setup_screen/Dry_SetupView.hpp>
#include <gui/dry_setup_screen/Dry_SetupPresenter.hpp>
#include <gui/reflow_setup_screen/Reflow_SetupView.hpp>
#include <gui/reflow_setup_screen/Reflow_SetupPresenter.hpp>
#include <gui/reflow_setup_edit_screen/Reflow_Setup_EditView.hpp>
#include <gui/reflow_setup_edit_screen/Reflow_Setup_EditPresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< StartUpView,
            touchgfx::meta::TypeList< ErrorView,
            touchgfx::meta::TypeList< Home_ReflowView,
            touchgfx::meta::TypeList< Home_DryView,
            touchgfx::meta::TypeList< MenuView,
            touchgfx::meta::TypeList< SettingsView,
            touchgfx::meta::TypeList< Setup_PidView,
            touchgfx::meta::TypeList< Dry_SetupView,
            touchgfx::meta::TypeList< Reflow_SetupView,
            touchgfx::meta::TypeList< Reflow_Setup_EditView,
            touchgfx::meta::Nil > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< StartUpPresenter,
            touchgfx::meta::TypeList< ErrorPresenter,
            touchgfx::meta::TypeList< Home_ReflowPresenter,
            touchgfx::meta::TypeList< Home_DryPresenter,
            touchgfx::meta::TypeList< MenuPresenter,
            touchgfx::meta::TypeList< SettingsPresenter,
            touchgfx::meta::TypeList< Setup_PidPresenter,
            touchgfx::meta::TypeList< Dry_SetupPresenter,
            touchgfx::meta::TypeList< Reflow_SetupPresenter,
            touchgfx::meta::TypeList< Reflow_Setup_EditPresenter,
            touchgfx::meta::Nil > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::Nil
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartUpScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
