/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/setup_pid_screen/Setup_PidViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Setup_PidViewBase::Setup_PidViewBase() :
    buttonCallback(this, &Setup_PidViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RESIZED_IMAGE_320X480_ID));
    add(image1);

    btnSet.setXY(194, 423);
    btnSet.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    btnSet.setLabelText(touchgfx::TypedText(T___SINGLEUSE_OCCZ));
    btnSet.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    btnSet.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnSet.setAction(buttonCallback);
    add(btnSet);

    btnBack.setXY(26, 423);
    btnBack.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    btnBack.setLabelText(touchgfx::TypedText(T___SINGLEUSE_YO4Y));
    btnBack.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    btnBack.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnBack.setAction(buttonCallback);
    add(btnBack);

    btnPID_P_UP.setXY(59, 271);
    btnPID_P_UP.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_000000_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_FFFFFF_SVG_ID));
    btnPID_P_UP.setIconXY(6, 6);
    btnPID_P_UP.setAction(buttonCallback);
    add(btnPID_P_UP);

    btnPID_P_DN.setXY(196, 271);
    btnPID_P_DN.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_000000_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_FFFFFF_SVG_ID));
    btnPID_P_DN.setIconXY(6, 6);
    btnPID_P_DN.setAction(buttonCallback);
    add(btnPID_P_DN);

    txtPID_P.setPosition(89, 151, 137, 48);
    txtPID_P.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtPID_P.setLinespacing(0);
    Unicode::snprintf(txtPID_PBuffer, TXTPID_P_SIZE, "%s", touchgfx::TypedText(T_0).getText());
    txtPID_P.setWildcard(txtPID_PBuffer);
    txtPID_P.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TYNP));
    add(txtPID_P);

    txt.setPosition(81, 64, 159, 33);
    txt.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txt.setLinespacing(0);
    txt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y32V));
    add(txt);
}

Setup_PidViewBase::~Setup_PidViewBase()
{

}

void Setup_PidViewBase::setupScreen()
{

}

void Setup_PidViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btnBack)
    {
        //Pid_PtoSettings
        //When btnBack clicked change screen to Settings
        //Go to Settings with no screen transition
        application().gotoSettingsScreenNoTransition();
    }
    if (&src == &btnPID_P_UP)
    {
        //P_up
        //When btnPID_P_UP clicked call virtual function
        //Call PID_P_value_up
        PID_P_value_up();
    }
    if (&src == &btnPID_P_DN)
    {
        //P_dn
        //When btnPID_P_DN clicked call virtual function
        //Call PID_P_value_dn
        PID_P_value_dn();
    }
    if (&src == &btnSet)
    {
        //setPID_P_value
        //When btnSet clicked call virtual function
        //Call setPID_P_value
        setPID_P_value();
    }
}
