/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/homedry_screen/HomeDryViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

HomeDryViewBase::HomeDryViewBase() :
    buttonCallback(this, &HomeDryViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_240X240_SHATTERED_RAIN_DARK_ID));
    scalableImage1.setPosition(0, 0, 320, 480);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    btnDryMenu.setXY(210, 423);
    btnDryMenu.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    btnDryMenu.setLabelText(touchgfx::TypedText(T___SINGLEUSE_FZEQ));
    btnDryMenu.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    btnDryMenu.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnDryMenu.setAction(buttonCallback);
    add(btnDryMenu);

    btnDryStop.setXY(110, 423);
    btnDryStop.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    btnDryStop.setLabelText(touchgfx::TypedText(T___SINGLEUSE_OR7I));
    btnDryStop.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    btnDryStop.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(btnDryStop);

    btnDryStart.setXY(10, 423);
    btnDryStart.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    btnDryStart.setLabelText(touchgfx::TypedText(T___SINGLEUSE_23R0));
    btnDryStart.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    btnDryStart.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(btnDryStart);
}

HomeDryViewBase::~HomeDryViewBase()
{

}

void HomeDryViewBase::setupScreen()
{

}

void HomeDryViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btnDryMenu)
    {
        //DryToMenu
        //When btnDryMenu clicked change screen to Menu
        //Go to Menu with no screen transition
        application().gotoMenuScreenNoTransition();
    }
}
