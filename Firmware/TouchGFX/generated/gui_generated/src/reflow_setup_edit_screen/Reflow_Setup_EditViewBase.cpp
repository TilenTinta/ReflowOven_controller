/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/reflow_setup_edit_screen/Reflow_Setup_EditViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Reflow_Setup_EditViewBase::Reflow_Setup_EditViewBase() :
    buttonCallback(this, &Reflow_Setup_EditViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RESIZED_IMAGE_320X480_ID));
    add(image1);

    line1.setPosition(16, 131, 288, 20);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(5, 5);
    line1.setEnd(280, 5);
    line1.setLineWidth(4);
    line1.setLineEndingStyle(touchgfx::Line::SQUARE_CAP_ENDING);
    add(line1);

    line1_1.setPosition(20, 278, 288, 20);
    line1_1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1_1.setPainter(line1_1Painter);
    line1_1.setStart(5, 5);
    line1_1.setEnd(280, 5);
    line1_1.setLineWidth(4);
    line1_1.setLineEndingStyle(touchgfx::Line::SQUARE_CAP_ENDING);
    add(line1_1);

    btnSet.setXY(194, 423);
    btnSet.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    btnSet.setLabelText(touchgfx::TypedText(T___SINGLEUSE_W911));
    btnSet.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    btnSet.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnSet.setAction(buttonCallback);
    add(btnSet);

    btnTemp_UP.setXY(175, 151);
    btnTemp_UP.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_000000_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_FFFFFF_SVG_ID));
    btnTemp_UP.setIconXY(6, 6);
    btnTemp_UP.setAction(buttonCallback);
    add(btnTemp_UP);

    btnTemp_DN.setXY(242, 151);
    btnTemp_DN.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_000000_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_FFFFFF_SVG_ID));
    btnTemp_DN.setIconXY(6, 6);
    btnTemp_DN.setAction(buttonCallback);
    add(btnTemp_DN);

    txtTemp.setPosition(14, 157, 101, 44);
    txtTemp.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtTemp.setLinespacing(0);
    Unicode::snprintf(txtTempBuffer, TXTTEMP_SIZE, "%s", touchgfx::TypedText(T_0).getText());
    txtTemp.setWildcard(txtTempBuffer);
    txtTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0WFI));
    add(txtTemp);

    btnTime_UP.setXY(179, 298);
    btnTime_UP.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_000000_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_FFFFFF_SVG_ID));
    btnTime_UP.setIconXY(6, 6);
    btnTime_UP.setAction(buttonCallback);
    add(btnTime_UP);

    btnTime_DN.setXY(246, 298);
    btnTime_DN.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_000000_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_FFFFFF_SVG_ID));
    btnTime_DN.setIconXY(6, 6);
    btnTime_DN.setAction(buttonCallback);
    add(btnTime_DN);

    txtTime.setPosition(11, 304, 98, 45);
    txtTime.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtTime.setLinespacing(0);
    Unicode::snprintf(txtTimeBuffer, TXTTIME_SIZE, "%s", touchgfx::TypedText(T_0).getText());
    txtTime.setWildcard(txtTimeBuffer);
    txtTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0M6R));
    add(txtTime);

    btnBack.setXY(26, 423);
    btnBack.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    btnBack.setLabelText(touchgfx::TypedText(T___SINGLEUSE_65EO));
    btnBack.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    btnBack.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btnBack.setAction(buttonCallback);
    add(btnBack);

    textArea1.setPosition(116, 319, 48, 30);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NMV8));
    add(textArea1);

    textArea1_2.setPosition(25, 248, 81, 30);
    textArea1_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2.setLinespacing(0);
    textArea1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6P3Z));
    add(textArea1_2);

    textArea1_2_1.setPosition(21, 101, 170, 30);
    textArea1_2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_2_1.setLinespacing(0);
    textArea1_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0WB8));
    add(textArea1_2_1);

    textArea1_1.setXY(121, 171);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I3CG));
    add(textArea1_1);

    txtScreenLabel.setPosition(60, 35, 200, 35);
    txtScreenLabel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtScreenLabel.setLinespacing(0);
    Unicode::snprintf(txtScreenLabelBuffer, TXTSCREENLABEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SU0X).getText());
    txtScreenLabel.setWildcard(txtScreenLabelBuffer);
    txtScreenLabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B0IJ));
    add(txtScreenLabel);
}

Reflow_Setup_EditViewBase::~Reflow_Setup_EditViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Reflow_Setup_EditViewBase::setupScreen()
{

}

void Reflow_Setup_EditViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btnBack)
    {
        //EditBack
        //When btnBack clicked change screen to Reflow_Setup
        //Go to Reflow_Setup with no screen transition
        application().gotoReflow_SetupScreenNoTransition();
    }
    if (&src == &btnSet)
    {
        //saveSetValue
        //When btnSet clicked call virtual function
        //Call saveSetValue
        saveSetValue();
    }
    if (&src == &btnTemp_UP)
    {
        //tempUp
        //When btnTemp_UP clicked call virtual function
        //Call tempUp
        tempUp();
    }
    if (&src == &btnTemp_DN)
    {
        //tempDn
        //When btnTemp_DN clicked call virtual function
        //Call tempDn
        tempDn();
    }
    if (&src == &btnTime_UP)
    {
        //timeUp
        //When btnTime_UP clicked call virtual function
        //Call timeUp
        timeUp();
    }
    if (&src == &btnTime_DN)
    {
        //timeDn
        //When btnTime_DN clicked call virtual function
        //Call timeDn
        timeDn();
    }
}
